{
  "name": "chatgpt-sql-vscode-plugin",
  "publisher": "gaojian80422",
  "displayName": "ChatGPT With MySQL Cache",
  "icon": "images/icon.png",
  "description": "A ChatGPT with MySQL cache integration build using ChatGPT",
  "version": "3.2.2",
  "aiKey": "",
  "repository": {
    "url": "https://github.com/gaojian80422/chatgpt-sql-vscode-plugin"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Testing",
    "Data Science",
    "Formatters",
    "Programming Languages",
    "Linters"
  ],
  "keywords": [
    "chatgpt",
    "lamda",
    "bard",
    "gpt",
    "gpt3",
    "gpt3.5",
    "gpt4",
    "codex",
    "openai",
    "testing",
    "find bugs",
    "copilot",
    "ai",
    "mysql",
    "cache"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "menus": {
      "editor/context": [
        {
          "when": "editorTextFocus",
          "submenu": "ChatGPTSQL",
          "group": "chat-gpt-menu-group",
          "title": "ChatGPT"
        }
      ],
      "ChatGPTSQL": [
        {
          "command": "chatgpt-sql-vscode-plugin.summarize",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection"
        },
        {
          "command": "chatgpt-sql-vscode-plugin.whyBroken",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection"
        },
        {
          "command": "chatgpt-sql-vscode-plugin.refactor",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection"
        },
        {
          "command": "chatgpt-sql-vscode-plugin.generateCode",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection && generateCode-enabled"
        },
        {
          "command": "chatgpt-sql-vscode-plugin.addTests",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection && addTests-enabled"
        },
        {
          "command": "chatgpt-sql-vscode-plugin.findProblems",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection && findProblems-enabled"
        },
        {
          "command": "chatgpt-sql-vscode-plugin.optimize",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection && optimize-enabled"
        },
        {
          "command": "chatgpt-sql-vscode-plugin.explain",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection && explain-enabled"
        },
        {
          "command": "chatgpt-sql-vscode-plugin.addComments",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection && addComments-enabled"
        },
        {
          "command": "chatgpt-sql-vscode-plugin.completeCode",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection && completeCode-enabled"
        },
        {
          "command": "chatgpt-sql-vscode-plugin.adhoc",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection && adhoc-enabled"
        },
        {
          "command": "chatgpt-sql-vscode-plugin.customPrompt1",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection && customPrompt1-enabled"
        },
        {
          "command": "chatgpt-sql-vscode-plugin.customPrompt2",
          "group": "chat-gpt-menu-group",
          "when": "editorHasSelection && customPrompt2-enabled"
        }
      ]
    },
    "submenus": [
      {
        "id": "ChatGPTSQL",
        "label": "ChatGPTMySQL"
      }
    ],
    "commands": [
      {
        "command": "chatgpt-sql-vscode-plugin.freeText",
        "title": "ChatGPTMySQL: Ask anything"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.clearSession",
        "title": "ChatGPTMySQL: Reset session"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.summarize",
        "title": "ChatGPTMySQL: Summarize",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.whyBroken",
        "title": "ChatGPTMySQL: Why is it broken?",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.refactor",
        "title": "ChatGPTMySQL: Refactor",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.generateCode",
        "title": "ChatGPT-Codex: Generate code",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.addTests",
        "title": "ChatGPTMySQL: Add tests",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.findProblems",
        "title": "ChatGPTMySQL: Find bugs",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.optimize",
        "title": "ChatGPTMySQL: Optimize",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.explain",
        "title": "ChatGPTMySQL: Explain",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.addComments",
        "title": "ChatGPTMySQL: Add comments",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.completeCode",
        "title": "ChatGPTMySQL: Complete code",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.adhoc",
        "title": "ChatGPTMySQL: Ad-hoc prompt",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.customPrompt1",
        "title": "ChatGPTMySQL: Custom prompt 1",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.customPrompt2",
        "title": "ChatGPTMySQL: Custom prompt 2",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.clearConversation",
        "title": "ChatGPTMySQL: Clear conversation"
      },
      {
        "command": "chatgpt-sql-vscode-plugin.exportConversation",
        "title": "ChatGPTMySQL: Export conversation"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "chatgpt-sql-vscode-plugin-view-container",
          "title": "ChatGPT MySQL",
          "icon": "images/openai-logo.svg"
        }
      ]
    },
    "views": {
      "chatgpt-sql-vscode-plugin-view-container": [
        {
          "type": "webview",
          "id": "chatgpt-sql-vscode-plugin.view",
          "name": "Conversation window"
        }
      ]
    },
    "configuration": {
      "title": "ChatGPTSql",
      "properties": {
        "chatgpt-sql.mysql.readEnable": {
          "type": "boolean",
          "default": true,
          "description": "Mysql database read enable, return result if hit in database",
          "order": 1
        },
        "chatgpt-sql.mysql.writeEnable": {
          "type": "boolean",
          "default": true,
          "description": "Mysql database write enable, write result into database",
          "order": 2
        },
        "chatgpt-sql.mysql.host": {
          "type": "string",
          "default": "localhost",
          "description": "Mysql database host, reaload window if change this",
          "order": 3
        },
        "chatgpt-sql.mysql.port": {
          "type": "number",
          "default": 3306,
          "description": "Mysql database port, reaload window if change this",
          "order": 4
        },
        "chatgpt-sql.mysql.user": {
          "type": "string",
          "default": "",
          "description": "Mysql database user name, reaload window if change this",
          "order": 5
        },
        "chatgpt-sql.mysql.password": {
          "type": "string",
          "default": "",
          "description": "Mysql database user password, reaload window if change this",
          "order": 6
        },
        "chatgpt-sql.mysql.database": {
          "type": "string",
          "default": "chatgpt_sql_vscode_plugin_database",
          "description": "Mysql database name, no need to change if not sure, reaload window if change this",
          "order": 7
        },
        "chatgpt-sql.method": {
          "type": "string",
          "enum": [
            "GPT3 OpenAI API Key"
          ],
          "default": "GPT3 OpenAI API Key",
          "markdownDescription": "Choose your integration preference.",
          "order": 8,
          "enumItemLabels": [
            "Use OpenAI API key integration"
          ],
          "markdownEnumDescriptions": [
            "Various text & code completion models are supported including ChatGPT Turbo models. \n\n- GPT3.5 -> i.e. `'chatgpt-sql.gpt3.model': 'gpt-3.5-turbo'`\n\n- GPT3 -> i.e. `'chatgpt-sql.gpt3.model': 'text-davinci-003'`\n\n- Codex -> i.e.`'chatgpt-sql.gpt3.model': 'code-davinci-002'`"
          ]
        },
        "chatgpt-sql.gpt3.generateCode-enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the code generation context menu item for the selected comment/code for Codex. Only available with code-* models",
          "order": 9
        },
        "chatgpt-sql.system": {
          "type": "string",
          "default": "You are ChatGPT helping the User with coding. You are intelligent, helpful and an expert developer, who always gives the correct answer and only does what instructed. You always answer truthfully and don't make things up. (When responding to the following prompt, please make sure to properly style your response using Github Flavored Markdown. Use markdown syntax for things like headings, lists, colored text, code blocks, highlights etc. Make sure not to mention markdown or styling in your actual response.",
          "description": "The system message used in OpenAI API",
          "order": 10
        },
        "chatgpt-sql.promptPrefix.summarize": {
          "type": "string",
          "default": "Summarize the following code",
          "description": "The prompt prefix used for summarizing the selected code",
          "order": 20
        },
        "chatgpt-sql.promptPrefix.whyBroken": {
          "type": "string",
          "default": "Why is this code broken?",
          "description": "The prompt prefix used for finding why broken for the selected code",
          "order": 21
        },
        "chatgpt-sql.promptPrefix.refactor": {
          "type": "string",
          "default": "Can you refactor this code and explain what's changed?",
          "description": "The prompt prefix used for refactor for the selected code",
          "order": 22
        },
        "chatgpt-sql.promptPrefix.addTests": {
          "type": "string",
          "default": "Implement tests for the following code",
          "description": "The prompt prefix used for adding tests for the selected code",
          "order": 23
        },
        "chatgpt-sql.promptPrefix.addTests-enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the prompt prefix used for adding tests for the selected code in the context menu",
          "order": 24
        },
        "chatgpt-sql.promptPrefix.findProblems": {
          "type": "string",
          "default": "Find problems with the following code",
          "description": "The prompt prefix used for finding problems for the selected code",
          "order": 25
        },
        "chatgpt-sql.promptPrefix.findProblems-enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the prompt prefix used for finding problems for the selected code in the context menu",
          "order": 26
        },
        "chatgpt-sql.promptPrefix.optimize": {
          "type": "string",
          "default": "Optimize the following code",
          "description": "The prompt prefix used for optimizing the selected code",
          "order": 27
        },
        "chatgpt-sql.promptPrefix.optimize-enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the prompt prefix used for optimizing the selected code in the context menu",
          "order": 28
        },
        "chatgpt-sql.promptPrefix.explain": {
          "type": "string",
          "default": "Explain the following code",
          "description": "The prompt prefix used for explaining the selected code",
          "order": 29
        },
        "chatgpt-sql.promptPrefix.explain-enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the prompt prefix used for explaining the selected code in the context menu",
          "order": 30
        },
        "chatgpt-sql.promptPrefix.addComments": {
          "type": "string",
          "default": "Add comments for the following code",
          "description": "The prompt prefix used for adding comments for the selected code",
          "order": 31
        },
        "chatgpt-sql.promptPrefix.addComments-enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the prompt prefix used for adding comments for the selected code in the context menu",
          "order": 32
        },
        "chatgpt-sql.promptPrefix.completeCode": {
          "type": "string",
          "default": "Complete the following code",
          "description": "The prompt prefix used for completing the selected code",
          "order": 33
        },
        "chatgpt-sql.promptPrefix.completeCode-enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the prompt prefix used for completing the selected code in the context menu",
          "order": 34
        },
        "chatgpt-sql.promptPrefix.customPrompt1": {
          "type": "string",
          "default": "",
          "description": "Your custom prompt. It's disabled by default, please set to a custom prompt and enable it if you prefer using customized prompt",
          "order": 35
        },
        "chatgpt-sql.promptPrefix.customPrompt1-enabled": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable the prompt prefix used for your custom prompt. The default value is empty, if you enable this item make sure to set this `chatgpt-sql.promptPrefix.customPrompt1`",
          "order": 36
        },
        "chatgpt-sql.promptPrefix.customPrompt2": {
          "type": "string",
          "default": "",
          "description": "Your custom prompt. It's disabled by default, please set to a custom prompt and enable it if you prefer using customized prompt",
          "order": 37
        },
        "chatgpt-sql.promptPrefix.customPrompt2-enabled": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable the prompt prefix used for your custom prompt. The default value is empty, if you enable this item make sure to set this `chatgpt-sql.promptPrefix.customPrompt2`",
          "order": 38
        },
        "chatgpt-sql.promptPrefix.adhoc-enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the prompt prefix used for adhoc command for the selected code in the context menu",
          "order": 39
        },
        "chatgpt-sql.gpt3.apiKey": {
          "type": "string",
          "markdownDescription": "OpenAI API key. [Get your API Key from OpenAI](https://beta.openai.com/account/api-keys). \n\n**Please enable OpenAI API Key method to use this setting.**",
          "order": 100
        },
        "chatgpt-sql.gpt3.apiBaseUrl": {
          "type": "string",
          "default": "https://api.openai.com",
          "markdownDescription": "Optional override for the OpenAI API base URL. If you customize it, please make sure you have the same format. e.g. starts with `https://` without a trailing slash. The completions endpoint suffix is added internally, e.g. for reference: `${apiBaseUrl}/v1/completions`",
          "order": 101
        },
        "chatgpt-sql.gpt3.organization": {
          "type": "string",
          "markdownDescription": "OpenAI Organization ID. [Documentation](https://beta.openai.com/docs/api-reference/requesting-organization). \n\n**Please enable OpenAI API Key method to use this setting.**",
          "order": 102
        },
        "chatgpt-sql.gpt3.model": {
          "type": "string",
          "enum": [
            "gpt-3.5-turbo",
            "gpt-3.5-turbo-0301",
            "text-davinci-003",
            "text-curie-001",
            "text-babbage-001",
            "text-ada-001",
            "code-davinci-002",
            "code-cushman-001"
          ],
          "default": "gpt-3.5-turbo",
          "markdownDescription": "OpenAI models to use for your prompts. [Documentation](https://beta.openai.com/docs/models/models). \n\n**If you face 400 Bad Request please make sure you are using the right model for your integration method.**",
          "order": 103,
          "enumItemLabels": [
            "OpenAI API Key - gpt-3.5-turbo",
            "OpenAI API Key - gpt-3.5-turbo-0301",
            "OpenAI API Key - text-davinci-003",
            "OpenAI API Key - text-curie-001",
            "OpenAI API Key - text-babbage-001",
            "OpenAI API Key - text-ada-001",
            "OpenAI API Key - code-davinci-002",
            "OpenAI API Key - code-cushman-001"
          ],
          "markdownEnumDescriptions": [
            "Most capable GPT-3.5 model and optimized for chat at 1/10th the cost of `text-davinci-003`. Will be updated with our latest model iteration.",
            "Snapshot of `gpt-3.5-turbo` from March 1st 2023. Unlike gpt-3.5-turbo, this model will not receive updates, and will only be supported for a three month period ending on June 1st 2023."
          ]
        },
        "chatgpt-sql.gpt3.maxTokens": {
          "type": "number",
          "default": 1024,
          "markdownDescription": "The maximum number of tokens to generate in the completion. \n\nThe token count of your prompt plus max_tokens cannot exceed the model's context length. Most models have a context length of 2048 tokens (except for the newest models, which support 4096). [Documentation](https://beta.openai.com/docs/api-reference/completions/create#completions/create-max_tokens) \n\n**Please enable OpenAI API Key method to use this setting.**",
          "order": 104
        },
        "chatgpt-sql.gpt3.temperature": {
          "type": "number",
          "default": 1,
          "markdownDescription": "What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.\n\nIt is recommended altering this or top_p but not both. [Documentation](https://beta.openai.com/docs/api-reference/completions/create#completions/create-temperature) \n\n**Please enable OpenAI API Key method to use this setting.**",
          "order": 105
        },
        "chatgpt-sql.gpt3.top_p": {
          "type": "number",
          "default": 1,
          "markdownDescription": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. \n\nIt is recommended altering this or temperature but not both. [Documentation](https://beta.openai.com/docs/api-reference/completions/create#completions/create-top_p) \n\n**Please enable OpenAI API Key method to use this setting.**",
          "order": 106
        },
        "chatgpt-sql.response.showNotification": {
          "type": "boolean",
          "default": false,
          "description": "Choose whether you'd like to receive a notification when ChatGPT bot responds to your query.",
          "order": 107
        },
        "chatgpt-sql.response.autoScroll": {
          "type": "boolean",
          "default": true,
          "description": "Whenever there is a new question or response added to the conversation window, extension will automatically scroll to the bottom. You can change that behavior by disabling this setting.",
          "order": 108
        },
        "chatgpt-sql.telemetry.disable": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Specify if you want to disable the telemetry. This extension also respects your default vs-code telemetry setting `telemetry.telemetryLevel`. We check both settings for telemetry. **Important**: No user data is tracked, we only use telemetry to see what is used, and what isn't. This allows us to make accurate decisions on what to add or enhance to the extension.",
          "order": 109
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "rimraf out && npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "build": "npm run -S esbuild-base -- --sourcemap",
    "watch": "npm run -S esbuild-base -- --sourcemap --watch",
    "fmt": "prettier --write \"src/**/*.ts\"&& npm run test -- --fix",
    "test": "eslint src --ext ts && tsc --noEmit"
  },
  "devDependencies": {
    "@types/crypto-js": "^4.1.1",
    "@types/glob": "^8.0.0",
    "@types/isomorphic-fetch": "^0.0.36",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/uuid": "^9.0.0",
    "@types/vscode": "^1.73.0",
    "@types/vscode-webview": "^1.57.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "esbuild": "^0.15.18",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "ts-loader": "^9.4.1",
    "typescript": "^4.9.3"
  },
  "dependencies": {
    "crypto-js": "^4.1.1",
    "delay": "^5.0.0",
    "eventsource-parser": "^0.1.0",
    "gpt3-tokenizer": "^1.1.5",
    "isomorphic-fetch": "^3.0.0",
    "keyv": "^4.5.2",
    "mysql2": "^3.2.0",
    "openai": "^3.1.0",
    "p-timeout": "^6.1.1",
    "puppeteer": "^19.4.0",
    "puppeteer-extra": "^3.3.4",
    "puppeteer-extra-plugin-stealth": "^2.11.1",
    "puppeteer-extra-plugin-user-data-dir": "^2.4.0",
    "puppeteer-extra-plugin-user-preferences": "^2.4.0",
    "quick-lru": "^6.1.1",
    "remark": "^14.0.2",
    "strip-markdown": "^5.0.0",
    "uuid": "^9.0.0"
  },
  "resolutions": {
    "clone-deep": "^4.0.1"
  }
}